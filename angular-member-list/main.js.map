{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/formdialog/formdialog.component.css","webpack:///./src/app/formdialog/formdialog.component.html","webpack:///./src/app/formdialog/formdialog.component.ts","webpack:///./src/app/member-model.ts","webpack:///./src/app/memberlist/memberlist.component.css","webpack:///./src/app/memberlist/memberlist.component.html","webpack:///./src/app/memberlist/memberlist.component.ts","webpack:///./src/app/memberlist/memberlist.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/material-module.ts","webpack:///./src/mock.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-memberlist></app-memberlist>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { MemberlistComponent } from './memberlist/memberlist.component';\nimport { DemoMaterialModule } from './../material-module';\nimport { FormdialogComponent } from './formdialog/formdialog.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MemberlistComponent,\n    FormdialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    DemoMaterialModule\n  ],\n  entryComponents: [FormdialogComponent],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Create/Edit</h1>\\n<form [formGroup]=\\\"checkoutForm\\\">\\n<div mat-dialog-content>\\n  <mat-form-field>\\n    <input matInput [value]=\\\"data.firstName\\\" placeholder=\\\"first name\\\" formControlName=\\\"firstName\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput [value]=\\\"data.lastName\\\" placeholder=\\\"last name\\\" formControlName=\\\"lastName\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n      <input matInput [value]=\\\"data.age\\\" placeholder=\\\"age\\\" formControlName=\\\"age\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Contact\\\" formControlName=\\\"contact\\\">\\n      <mat-option value=\\\"line\\\">Line</mat-option>\\n      <mat-option value=\\\"email\\\">Email</mat-option>\\n      <mat-option value=\\\"facebook\\\">Facebook</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  \\n  <mat-form-field *ngIf=\\\"checkoutForm.value.contact === 'line'\\\">\\n    <input matInput [value]=\\\"data.line\\\" placeholder=\\\"line\\\" formControlName=\\\"line\\\">\\n  </mat-form-field>\\n  <mat-form-field *ngIf=\\\"checkoutForm.value.contact === 'email'\\\">\\n    <input matInput [value]=\\\"data.email\\\" placeholder=\\\"email\\\" formControlName=\\\"email\\\">\\n  </mat-form-field>\\n  <mat-form-field *ngIf=\\\"checkoutForm.value.contact === 'facebook'\\\">\\n      <input matInput [value]=\\\"data.facebook\\\" placeholder=\\\"facebook\\\" formControlName=\\\"facebook\\\">\\n    </mat-form-field>\\n  \\n</div>\\n<div mat-dialog-actions>\\n  <button mat-raised-button (click)=\\\"onNoClick()\\\">cancel</button>\\n  <button mat-raised-button (click)=\\\"onSave(checkoutForm.value, data.id)\\\">save</button>\\n</div>\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Member } from '../member-model';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MemberlistService } from '../memberlist/memberlist.service';\n\n@Component({\n  selector: 'app-formdialog',\n  templateUrl: './formdialog.component.html',\n  styleUrls: ['./formdialog.component.css']\n})\nexport class FormdialogComponent implements OnInit {\n  checkoutForm;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormdialogComponent>,\n    private formBuilder: FormBuilder,\n    private memberService: MemberlistService,\n    @Inject(MAT_DIALOG_DATA) public data: Member,\n  ) {\n    this.checkoutForm = this.formBuilder.group(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onSave(value, id?) {\n    if (id === undefined) {\n      this.memberService.addMember(value);\n    } else {\n      this.memberService.editMember(id, value);\n    }\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class Member {\n    id = undefined;\n    firstName = '';\n    lastName = '';\n    age = '';\n    line = '';\n    email = '';\n    facebook = '';\n}\n","module.exports = \"table {\\n    width: 100%;\\n}\"","module.exports = \"<table mat-table #memlist [dataSource]=\\\"getMembers()\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!--- Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n  <ng-container matColumnDef=\\\"firstName\\\">\\n    <th mat-header-cell *matHeaderCellDef> First Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"lastName\\\">\\n    <th mat-header-cell *matHeaderCellDef> Last Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastName}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"age\\\">\\n    <th mat-header-cell *matHeaderCellDef> Age </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.age}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"contact\\\">\\n    <th mat-header-cell *matHeaderCellDef> Contact </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> \\n      <p>line: {{element.line}}</p>\\n      <p>email: {{element.email}}</p>\\n      <p>facebook: {{element.facebook}}</p>\\n    </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"edit\\\">\\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> \\n          <button mat-raised-button (click)=\\\"onEdit(element.id)\\\">Edit</button> \\n      </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"delete\\\">\\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <button mat-raised-button (click)=\\\"onDelete(element.id)\\\">Delete</button> \\n      </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n<button mat-raised-button (click)=\\\"onCreate()\\\">Add</button> \\n\\n\\n\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { MatTable } from '@angular/material/table';\nimport { MemberlistService } from './memberlist.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormdialogComponent } from '../formdialog/formdialog.component';\n\n@Component({\n  selector: 'app-memberlist',\n  templateUrl: './memberlist.component.html',\n  styleUrls: ['./memberlist.component.css']\n})\nexport class MemberlistComponent implements OnInit {\n  displayedColumns: string[] = ['firstName', 'lastName', 'age', 'contact', 'edit', 'delete'];\n\n  @ViewChild('memlist') memlist: MatTable<any>;\n\n  constructor(\n    private memberService: MemberlistService,\n    public dialog: MatDialog,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  getMembers() {\n    return this.memberService.getMembers();\n  }\n\n  onDelete(id) {\n    this.memberService.deleteMember(id);\n    this.memlist.renderRows();\n  }\n\n  onEdit(id): void {\n    const dialogRef = this.dialog.open(FormdialogComponent, {\n      width: '400px',\n      data: {...this.memberService.getSingleMember(id),\n        contact: ''}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.memlist.renderRows();\n    });\n  }\n\n  onCreate() {\n    const dialogRef = this.dialog.open(FormdialogComponent, {\n      width: '400px',\n      data: {...this.memberService.getSingleMember(-1),\n      contact: ''}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.memlist.renderRows();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport mockLib from '../../mock';\nimport { Member } from '../member-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberlistService {\n  member: Member[];\n  maxIndex: number;\n  constructor() {\n    this.member = mockLib.flattenMock(mockLib.mock);\n    this.maxIndex = this.member.length;\n  }\n  getMembers() {\n    return this.member;\n  }\n  deleteMember(id) {\n    this.member = this.member.filter((member) => member.id !== id);\n  }\n  getSingleMember(id) {\n    if (id === -1) {\n      return new Member();\n    }\n    return this.member.filter((member) => member.id === id)[0];\n  }\n  editMember(id, val) {\n    this.member = this.member.map(member => {\n      if (id === member.id) {\n        return val;\n      } else {\n        return member;\n      }\n    });\n  }\n  addMember(val: Member) {\n    this.member.push(val);\n    this.member[this.member.length - 1]['id'] = this.maxIndex;\n    this.maxIndex++;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","import {NgModule} from '@angular/core';\n// import {MatAutocompleteModule} from '@angular/material/autocomplete';\n// import {MatBadgeModule} from '@angular/material/badge';\n// import {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\n// import {MatButtonToggleModule} from '@angular/material/button-toggle';\n// import {MatCardModule} from '@angular/material/card';\n// import {MatCheckboxModule} from '@angular/material/checkbox';\n// import {MatChipsModule} from '@angular/material/chips';\n// import {MatStepperModule} from '@angular/material/stepper';\n// import {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\n// import {MatDividerModule} from '@angular/material/divider';\n// import {MatExpansionModule} from '@angular/material/expansion';\n// import {MatGridListModule} from '@angular/material/grid-list';\n// import {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\n// import {MatListModule} from '@angular/material/list';\n// import {MatMenuModule} from '@angular/material/menu';\n// import {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\n// import {MatPaginatorModule} from '@angular/material/paginator';\n// import {MatProgressBarModule} from '@angular/material/progress-bar';\n// import {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n// import {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\n// import {MatSidenavModule} from '@angular/material/sidenav';\n// import {MatSliderModule} from '@angular/material/slider';\n// import {MatSlideToggleModule} from '@angular/material/slide-toggle';\n// import {MatSnackBarModule} from '@angular/material/snack-bar';\n// import {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\n// import {MatTabsModule} from '@angular/material/tabs';\n// import {MatToolbarModule} from '@angular/material/toolbar';\n// import {MatTooltipModule} from '@angular/material/tooltip';\n// import {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    // MatAutocompleteModule,\n    // MatBadgeModule,\n    // MatBottomSheetModule,\n    MatButtonModule,\n    // MatButtonToggleModule,\n    // MatCardModule,\n    // MatCheckboxModule,\n    // MatChipsModule,\n    // MatStepperModule,\n    // MatDatepickerModule,\n    MatDialogModule,\n    // MatDividerModule,\n    // MatExpansionModule,\n    // MatGridListModule,\n    // MatIconModule,\n    MatInputModule,\n    // MatListModule,\n    // MatMenuModule,\n    // MatNativeDateModule,\n    // MatPaginatorModule,\n    // MatProgressBarModule,\n    // MatProgressSpinnerModule,\n    // MatRadioModule,\n    // MatRippleModule,\n    MatSelectModule,\n    // MatSidenavModule,\n    // MatSliderModule,\n    // MatSlideToggleModule,\n    // MatSnackBarModule,\n    // MatSortModule,\n    MatTableModule,\n    // MatTabsModule,\n    // MatToolbarModule,\n    // MatTooltipModule,\n    // MatTreeModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","const mock = [{\n    \"id\": 0,\n    \"firstName\": \"Tom\",\n    \"lastName\": \"Chen\",\n    \"age\": \"30\",\n    \"contact\": [{\n      \"line\": \"tmchen\"\n    }, {\n      \"email\": \"tmchen@gmail.com\"\n    }, {\n      \"facebook\": \"https://fb.com/chen\"\n    }]\n  },\n  {\n    \"id\": 1,\n    \"firstName\": \"Tim\",\n    \"lastName\": \"Tsai\",\n    \"age\": \"30\",\n    \"contact\": [{\n      \"line\": \"timtsa\"\n    }, {\n      \"email\": \"tsssss@gmail.com\"\n    }, {\n      \"facebook\": \"https://fb.com/tsai\"\n    }]\n  }\n];\n\nfunction flattenMock(mock){\n  var ret = [];\n  var obj = {};\n  \n  mock.forEach(function(m){\n    obj = Object.assign({},m);\n    delete obj.contact;\n    var flattenContact = m.contact.reduce(function(a,v){\n      a = Object.assign(v, a);\n      return a;\n    },{});\n    Object.assign(obj, flattenContact)\n    ret.push(obj);\n  });\n  return ret;\n}\n\nexport default {\n  mock: mock,\n  flattenMock: flattenMock\n};"],"sourceRoot":""}